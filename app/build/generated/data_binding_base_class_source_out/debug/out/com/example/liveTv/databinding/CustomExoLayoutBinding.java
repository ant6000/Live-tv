// Generated by view binder compiler. Do not edit!
package com.example.liveTv.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.liveTv.R;
import com.google.android.exoplayer2.ui.DefaultTimeBar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustomExoLayoutBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ImageView exoFullscreenBtn;

  @NonNull
  public final ImageView exoPlayPause;

  @NonNull
  public final DefaultTimeBar exoProgress;

  @NonNull
  public final View viewShow;

  private CustomExoLayoutBinding(@NonNull FrameLayout rootView, @NonNull ImageView exoFullscreenBtn,
      @NonNull ImageView exoPlayPause, @NonNull DefaultTimeBar exoProgress,
      @NonNull View viewShow) {
    this.rootView = rootView;
    this.exoFullscreenBtn = exoFullscreenBtn;
    this.exoPlayPause = exoPlayPause;
    this.exoProgress = exoProgress;
    this.viewShow = viewShow;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomExoLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomExoLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.custom_exo_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomExoLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.exo_fullscreen_btn;
      ImageView exoFullscreenBtn = ViewBindings.findChildViewById(rootView, id);
      if (exoFullscreenBtn == null) {
        break missingId;
      }

      id = R.id.exo_play_pause;
      ImageView exoPlayPause = ViewBindings.findChildViewById(rootView, id);
      if (exoPlayPause == null) {
        break missingId;
      }

      id = R.id.exo_progress;
      DefaultTimeBar exoProgress = ViewBindings.findChildViewById(rootView, id);
      if (exoProgress == null) {
        break missingId;
      }

      id = R.id.view_show;
      View viewShow = ViewBindings.findChildViewById(rootView, id);
      if (viewShow == null) {
        break missingId;
      }

      return new CustomExoLayoutBinding((FrameLayout) rootView, exoFullscreenBtn, exoPlayPause,
          exoProgress, viewShow);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
